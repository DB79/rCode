union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
wickets <- merge(wickets, total_matches_per_team, by.x = "bowling_team", by.y = "team")
wickets_per_match <- sqldf('select (cast(Total_Wickets_Taken as float)/total_matches) as "Wickets_Per_Match" from wickets group by bowling_team')
View(wickets_per_match)
wickets_per_match <- sqldf('select bowling_team ,(cast(Total_Wickets_Taken as float)/total_matches) as "Wickets_Per_Match" from wickets group by bowling_team')
wickets <- merge(wickets, wickets_per_match, by.x = "bowling_team", by.y = "bowling_team")
oxplot(wickets$Wickets_Per_Match, main="Boxplot of Wickets per player per match", ylab="Number of Wickets")
boxplot(wickets$Wickets_Per_Match, main="Boxplot of Wickets per player per match", ylab="Number of Wickets")
ggplot(wickets, aes(x=bowling_team, y=wickets_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Wickets Taken By Team Per Game')+
coord_flip()+
labs(x='Bowling Team', y='Average Wickets')+
geom_text(aes(label = wickets_Per_Match, y = wickets_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
ggplot(wickets, aes(x=bowling_team, y=Wickets_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Wickets Taken By Team Per Game')+
coord_flip()+
labs(x='Bowling Team', y='Average Wickets')+
geom_text(aes(label = Wickets_Per_Match, y = Wickets_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
ggplot(wickets, aes(x=bowling_team, y=Wickets_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Wickets Taken By Team Per Game')+
labs(x='Bowling Team', y='Average Wickets')+
geom_text(aes(label = Wickets_Per_Match, y = Wickets_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
setwd("E:/yr4/Big_Data/Project/ipl/\Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
#install.packages("ggplot2")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv')
matches <- read_csv('matches.csv')
# get total number of wickets per team
wickets <- sqldf('select bowling_team, count(*) as "Total_Wickets_Taken" from deliveries where dismissal_kind != "" group by bowling_team')
#calculate total matches played per team and add to wickets
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
total_matches_per_team <- sqldf('
select team,sum(matches) total_matches
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
wickets <- merge(wickets, total_matches_per_team, by.x = "bowling_team", by.y = "team")
#calculate wickets per match and add new column to wickets dataset
wickets_per_match <- sqldf('select bowling_team ,(cast(Total_Wickets_Taken as float)/total_matches) as "Wickets_Per_Match" from wickets group by bowling_team')
wickets <- merge(wickets, wickets_per_match, by.x = "bowling_team", by.y = "bowling_team")
# graph of average wickets taken per team
ggplot(wickets, aes(x=bowling_team, y=Wickets_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Wickets Taken By Team Per Game')+
coord_flip()+
labs(x='Bowling Team', y='Average Wickets')+
geom_text(aes(label = Wickets_Per_Match, y = Wickets_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
#install.packages("ggplot2")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv');
# get runs, balls and strike rate for all batsmen
batsman <- sqldf('SELECT match_id batsman, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls"
FROM deliveries GROUP BY batsman')
View(batsman)
# get runs, balls and strike rate for all batsmen
batsman <- sqldf('SELECT match_id. batsman, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls"
FROM deliveries GROUP BY batsman')
# get runs, balls and strike rate for all batsmen
batsman <- sqldf('SELECT match_id, batsman, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls"
FROM deliveries GROUP BY batsman')
View(batsman)
plot(batsman$runs, batsman$balls, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
View(batsman)
View(batsman)
# get runs, balls and strike rate for all batsmen
batsman <- sqldf('SELECT match_id, batsman, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls"
FROM deliveries GROUP by match_id')
plot(batsman$runs, batsman$balls, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
# get runs, balls and strike rate for all batsmen
batsman <- sqldf('SELECT match_id, batsman, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls"
FROM deliveries')
View(batsman)
batsman <- sqldf('SELECT match_id, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls"
FROM deliveries GROUP BY match_id')
plot(batsman$runs, batsman$balls, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
plot(batsman$balls, batsman$runs, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
# get runs, balls and strike rate for all batsmen
batsman <- sqldf('SELECT match_id, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls"
FROM deliveries GROUP BY batsman')
plot(batsman$balls, batsman$runs, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
#install.packages("ggplot2")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv')
# get runs, balls and strike rate for all batsmen
batsman <- sqldf('SELECT match_id, batsman, SUM(batsman_runs) AS "runs", Count(match_id) AS "balls", cast(SUM(batsman_runs) as float) / Count(match_id) AS "sr"
FROM deliveries GROUP BY match_id, batsman')
# correlation of runs scored and balls faced
cor(batsman$runs,batsman$balls)
# scatter plot Runs scored vs balls faced
plot(x	=	batsman$balls,	y	=	batsman$runs, main	= "Scatter Plot of Runs Scored vs Balls Faced", xlab	=	"Balls Faced", ylab	=	"Runs Scored")
# scatter plot of innings scores per match
plot(x	=	batsman$match_id,	y	=	batsman$runs, main	= "Scatter Plot of Runs Scored vs Balls Faced", xlab	=	"Balls Faced", ylab	=	"Runs Scored")
# remove the batsmen to allow for boxplot creation
stats <- sqldf('select runs, balls, sr from batsman')
boxplot(stats)
# scatter plot Runs scored vs balls faced
plot(x	=	batsman$balls,	y	=	batsman$runs, main	= "Scatter Plot of Runs Scored vs Balls Faced", xlab	=	"Balls Faced", ylab	=	"Runs Scored")
# scatter plot of innings scores per match
plot(x	=	batsman$match_id,	y	=	batsman$runs, main	= "Scatter Plot of Runs Scored vs Balls Faced", xlab	=	"Balls Faced", ylab	=	"Runs Scored")
plot(x	=	batsman$match_id,	y	=	batsman$runs, main	= "Scatter Plot of Runs Scored Per Match by Each Batsman", xlab	=	"Match ID", ylab	=	"Runs Scored")
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("readr")
#install.packages("sqldf")
#install.packages("dplyr")
library(sqldf)
library(readr)
library(dplyr)
library(ggplot2)
matches <- read.csv('matches.csv')
deliveries <- read.csv('deliveries.csv')
#  get each team that has played a game
df_teams<-(as.data.frame(unique(matches$team1)))
# column name = team
colnames(df_teams)[1]<-"team"
# total wins for each team
df_wins<-matches %>%
filter(result == "normal" | result == "tie") %>%
group_by(winner) %>%
summarise(total_win = n_distinct(id))
# merge two data-frames
df_teams<-merge(df_teams, df_wins, by.x = "team", by.y = "winner")
# get total matches where team is team1 and team is team2
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
# combine both sets above th get total numbuer of games per team
total_matches_per_team <- sqldf('
select team,sum(matches) total
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
# combine data frames, no. wins, total matches
df_teams<-merge(df_teams, total_matches_per_team, by.x = "team", by.y = "team")
# get win % based on total wins and total matches
df_teams<-df_teams %>%
mutate(winning_perc = (total_win/total_matches_per_team$total)*100)
# plot win data
df_teams %>%
ggplot(aes(x= reorder(team, -winning_perc), y= winning_perc))+
geom_bar(aes(fill = team), stat = "identity")+
labs(list(title = "Teams Performance", x = "Team", y = "Winning Percentage"))+
scale_fill_grey()+
theme(axis.text.x=element_text(angle=75, hjust=1), plot.title = element_text(size = 8, face = "bold"),text = element_text(size=8))
View(df_wins)
View(df_teams)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv')
matches <- read_csv('matches.csv')
# get total matches where team is team1 and team is team2
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
# combine both sets above th get total numbuer of games per team
total_matches_per_team <- sqldf('
select team,sum(matches) total_matches
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
# total runs per team
RunsPerTeam <- sqldf('select sum(total_runs) AS "total_runs", batting_team from deliveries group by batting_team order by 1 DESC')
RunsPerTeam <- merge(RunsPerTeam, total_matches_per_team, by.x = "batting_team", by.y = "team")
RunPerMatchPerTeam <- sqldf('select batting_team, (cast(total_runs as float)/total_matches) as "Runs_Per_Match" from RunsPerTeam group by batting_team')
RunsPerTeam <- merge(RunsPerTeam, RunPerMatchPerTeam, by.x = "batting_team", by.y = "batting_team")
ggplot(RunsPerTeam, aes(x=batting_team, y=Runs_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Runs Scored By Team Per Game')+
coord_flip()+
labs(x='Batting Team', y='Average Runs Scored')+
geom_text(aes(label = Runs_Per_Match, y = Runs_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
View(total_matches_per_team)
View(RunsPerTeam)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv')
matches <- read_csv('matches.csv')
# get total matches where team is team1 and team is team2
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
# combine both sets above th get total numbuer of games per team
total_matches_per_team <- sqldf('
select team,sum(matches) total_matches
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
# total runs per team
RunsPerTeam <- sqldf('select sum(total_runs) AS "total_runs", bowling_team from deliveries group by bowling_team order by 1 DESC')
RunsPerTeam <- merge(RunsPerTeam, total_matches_per_team, by.x = "bowling_team", by.y = "team")
RunPerMatchPerTeam <- sqldf('select bowling_team, (cast(total_runs as float)/total_matches) as "Runs_Per_Match" from RunsPerTeam group by bowling_team')
RunsPerTeam <- merge(RunsPerTeam, RunPerMatchPerTeam, by.x = "bowling_team", by.y = "bowling_team")
ggplot(RunsPerTeam, aes(x=bowling_team, y=Runs_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Runs Conceded By Team Per Game')+
coord_flip()+
labs(x='Bowling Team', y='Average Runs Scored')+
geom_text(aes(label = Runs_Per_Match, y = Runs_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
View(RunPerMatchPerTeam)
View(RunsPerTeam)
View(RunPerMatchPerTeam)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("readr")
#install.packages("sqldf")
#install.packages("dplyr")
library(sqldf)
library(readr)
library(dplyr)
library(ggplot2)
matches <- read.csv('matches.csv')
deliveries <- read.csv('deliveries.csv')
#  get each team that has played a game
df_teams<-(as.data.frame(unique(matches$team1)))
# column name = team
colnames(df_teams)[1]<-"team"
# total wins for each team
df_wins<-matches %>%
filter(result == "normal" | result == "tie") %>%
group_by(winner) %>%
summarise(total_win = n_distinct(id))
# merge two data-frames
df_teams<-merge(df_teams, df_wins, by.x = "team", by.y = "winner")
# get total matches where team is team1 and team is team2
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
# combine both sets above th get total numbuer of games per team
total_matches_per_team <- sqldf('
select team,sum(matches) total
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
# combine data frames, no. wins, total matches
df_teams<-merge(df_teams, total_matches_per_team, by.x = "team", by.y = "team")
# get win % based on total wins and total matches
df_teams<-df_teams %>%
mutate(winning_perc = (total_win/total_matches_per_team$total)*100)
# plot win data
df_teams %>%
ggplot(aes(x= reorder(team, -winning_perc), y= winning_perc))+
geom_bar(aes(fill = team), stat = "identity")+
labs(list(title = "Teams Performance", x = "Team", y = "Winning Percentage"))+
scale_fill_grey()+
theme(axis.text.x=element_text(angle=75, hjust=1), plot.title = element_text(size = 8, face = "bold"),text = element_text(size=8))
View(deliveries)
View(df_teams)
setwd("E:/yr4/Big_Data/Project/ipl/\Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
#install.packages("ggplot2")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv')
matches <- read_csv('matches.csv')
# get total number of wickets per team
wickets <- sqldf('select bowling_team, count(*) as "Total_Wickets_Taken" from deliveries where dismissal_kind != "" group by bowling_team')
#calculate total matches played per team and add to wickets
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
total_matches_per_team <- sqldf('
select team,sum(matches) total_matches
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
wickets <- merge(wickets, total_matches_per_team, by.x = "bowling_team", by.y = "team")
#calculate wickets per match and add new column to wickets dataset
wickets_per_match <- sqldf('select bowling_team ,(cast(Total_Wickets_Taken as float)/total_matches) as "Wickets_Per_Match" from wickets group by bowling_team')
wickets <- merge(wickets, wickets_per_match, by.x = "bowling_team", by.y = "bowling_team")
# graph of average wickets taken per team
ggplot(wickets, aes(x=bowling_team, y=Wickets_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Wickets Taken By Team Per Game')+
coord_flip()+
labs(x='Bowling Team', y='Average Wickets')+
geom_text(aes(label = Wickets_Per_Match, y = Wickets_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
View(wickets)
cor(df_teams$winning_perc,wickets$Wickets_Per_Match)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv')
matches <- read_csv('matches.csv')
# get total matches where team is team1 and team is team2
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
# combine both sets above th get total numbuer of games per team
total_matches_per_team <- sqldf('
select team,sum(matches) total_matches
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
# total runs per team
RunsPerTeam <- sqldf('select sum(total_runs) AS "total_runs", batting_team from deliveries group by batting_team order by 1 DESC')
RunsPerTeam <- merge(RunsPerTeam, total_matches_per_team, by.x = "batting_team", by.y = "team")
RunPerMatchPerTeam <- sqldf('select batting_team, (cast(total_runs as float)/total_matches) as "Runs_Per_Match" from RunsPerTeam group by batting_team')
RunsPerTeam <- merge(RunsPerTeam, RunPerMatchPerTeam, by.x = "batting_team", by.y = "batting_team")
ggplot(RunsPerTeam, aes(x=batting_team, y=Runs_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Runs Scored By Team Per Game')+
coord_flip()+
labs(x='Batting Team', y='Average Runs Scored')+
geom_text(aes(label = Runs_Per_Match, y = Runs_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
View(RunPerMatchPerTeam)
View(RunPerMatchPerTeam)
cor(df_teams$winning_perc, RunPerMatchPerTeam$Runs_Per_Match)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv')
matches <- read_csv('matches.csv')
# get total matches where team is team1 and team is team2
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
# combine both sets above th get total numbuer of games per team
total_matches_per_team <- sqldf('
select team,sum(matches) total_matches
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
# total runs per team
RunsPerTeam <- sqldf('select sum(total_runs) AS "total_runs", bowling_team from deliveries group by bowling_team order by 1 DESC')
RunsPerTeam <- merge(RunsPerTeam, total_matches_per_team, by.x = "bowling_team", by.y = "team")
RunPerMatchPerTeam <- sqldf('select bowling_team, (cast(total_runs as float)/total_matches) as "Runs_Per_Match" from RunsPerTeam group by bowling_team')
RunsPerTeam <- merge(RunsPerTeam, RunPerMatchPerTeam, by.x = "bowling_team", by.y = "bowling_team")
ggplot(RunsPerTeam, aes(x=bowling_team, y=Runs_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Runs Conceded By Team Per Game')+
coord_flip()+
labs(x='Bowling Team', y='Average Runs Scored')+
geom_text(aes(label = Runs_Per_Match, y = Runs_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
View(total_matches_per_team)
View(RunsPerTeam)
cor(df_teams$winning_perc, RunPerMatchPerTeam$Runs_Per_Match)
View(RunPerMatchPerTeam)
cor(df_teams$winning_perc, RunPerMatchPerTeam$Runs_Per_Match)
setwd("D:/yr4/Big_Data/Project/ipl/Analysis")
#install.packages("ggrepel")
#install.packages("readr")
#install.packages("dplyr")
#install.packages("sqldf")
library(sqldf)
library(ggplot2)
library(readr)
library(dplyr)
library(ggrepel)
deliveries <- read_csv('deliveries.csv')
matches <- read_csv('matches.csv')
# get total matches where team is team1 and team is team2
total_team1_matches_per_team <- sqldf('select team1 as "team", count(id) as "matches" from matches group by team1')
total_team2_matches_per_team <- sqldf('select team2 as "team", count(id) as "matches" from matches group by team2')
# combine both sets above th get total numbuer of games per team
total_matches_per_team <- sqldf('
select team,sum(matches) total_matches
from
(
select team,matches
from total_team1_matches_per_team
union all
select team,matches
from total_team2_matches_per_team
) t
group by team')
# total runs per team
RunsPerTeam <- sqldf('select sum(total_runs) AS "total_runs", batting_team from deliveries group by batting_team order by 1 DESC')
RunsPerTeam <- merge(RunsPerTeam, total_matches_per_team, by.x = "batting_team", by.y = "team")
RunPerMatchPerTeam <- sqldf('select batting_team, (cast(total_runs as float)/total_matches) as "Runs_Per_Match" from RunsPerTeam group by batting_team')
RunsPerTeam <- merge(RunsPerTeam, RunPerMatchPerTeam, by.x = "batting_team", by.y = "batting_team")
ggplot(RunsPerTeam, aes(x=batting_team, y=Runs_Per_Match))+
geom_bar(stat = 'identity', fill = 'grey', position = "dodge")+
theme_classic()+
ggtitle('Average Runs Scored By Team Per Game')+
coord_flip()+
labs(x='Batting Team', y='Average Runs Scored')+
geom_text(aes(label = Runs_Per_Match, y = Runs_Per_Match),
size = 3,  position = position_dodge(0.9), vjust = 0)
View(RunPerMatchPerTeam)
cor(df_teams$winning_perc, RunPerMatchPerTeam$Runs_Per_Match)
